<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="t_goods_brokerage" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.rc.portal.vo.TGoodsBrokerage" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="brokerage" property="brokerage" jdbcType="DECIMAL" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="rebate_amount" property="rebateAmount" jdbcType="DECIMAL" />
    <result column="audit_status" property="auditStatus" jdbcType="INTEGER" />
    <result column="audit_dt" property="auditDt" jdbcType="TIMESTAMP" />
    <result column="audit_remark" property="auditRemark" jdbcType="VARCHAR" />
    <result column="remak" property="remak" jdbcType="VARCHAR" />
    <result column="create_dt" property="createDt" jdbcType="TIMESTAMP" />
    <result column="apply_user" property="applyUser" jdbcType="VARCHAR" />
    <result column="apply_dt" property="applyDt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" >
    select id, goods_id, brokerage, weight, rebate_amount, audit_status, audit_dt, audit_remark,
      remak, create_dt, apply_user, apply_dt
    from t_goods_brokerage
    <isParameterPresent >
      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    select id, goods_id, brokerage, weight, rebate_amount, audit_status, audit_dt, audit_remark,
      remak, create_dt, apply_user, apply_dt
    from t_goods_brokerage
    where id = #id:BIGINT#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    delete from t_goods_brokerage
    where id = #id:BIGINT#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" >
    delete from t_goods_brokerage
    <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    insert into t_goods_brokerage (id, goods_id, brokerage, weight, rebate_amount, audit_status,
      audit_dt, audit_remark, remak, create_dt, apply_user, apply_dt)
    values (#id:BIGINT#, #goodsId:BIGINT#, #brokerage:DECIMAL#, #weight:INTEGER#,
      #rebateAmount:DECIMAL#, #auditStatus:INTEGER#, #auditDt:TIMESTAMP#, #auditRemark:VARCHAR#,
      #remak:VARCHAR#, #createDt:TIMESTAMP#, #applyUser:VARCHAR#, #applyDt:TIMESTAMP#)
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <insert id="ibatorgenerated_insertSelective" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    insert into t_goods_brokerage
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        goods_id
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        brokerage
      </isNotNull>
      <isNotNull prepend="," property="weight" >
        weight
      </isNotNull>
      <isNotNull prepend="," property="rebateAmount" >
        rebate_amount
      </isNotNull>
      <isNotNull prepend="," property="auditStatus" >
        audit_status
      </isNotNull>
      <isNotNull prepend="," property="auditDt" >
        audit_dt
      </isNotNull>
      <isNotNull prepend="," property="auditRemark" >
        audit_remark
      </isNotNull>
      <isNotNull prepend="," property="remak" >
        remak
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        create_dt
      </isNotNull>
      <isNotNull prepend="," property="applyUser" >
        apply_user
      </isNotNull>
      <isNotNull prepend="," property="applyDt" >
        apply_dt
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="goodsId" >
        #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        #brokerage:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="weight" >
        #weight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="rebateAmount" >
        #rebateAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="auditStatus" >
        #auditStatus:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="auditDt" >
        #auditDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="auditRemark" >
        #auditRemark:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="remak" >
        #remak:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        #createDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="applyUser" >
        #applyUser:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="applyDt" >
        #applyDt:TIMESTAMP#
      </isNotNull>
      )
    </dynamic>
	<selectKey resultClass="long" keyProperty="id"> 
		select LAST_INSERT_ID()
	</selectKey>
  </insert>

  <select id="ibatorgenerated_countByExample" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" resultClass="java.lang.Integer" >
    select count(*) from t_goods_brokerage
    <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update t_goods_brokerage
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.goodsId" >
        goods_id = #record.goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.brokerage" >
        brokerage = #record.brokerage:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.weight" >
        weight = #record.weight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.rebateAmount" >
        rebate_amount = #record.rebateAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="record.auditStatus" >
        audit_status = #record.auditStatus:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.auditDt" >
        audit_dt = #record.auditDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.auditRemark" >
        audit_remark = #record.auditRemark:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.remak" >
        remak = #record.remak:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.createDt" >
        create_dt = #record.createDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.applyUser" >
        apply_user = #record.applyUser:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.applyDt" >
        apply_dt = #record.applyDt:TIMESTAMP#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update t_goods_brokerage
    set id = #record.id:BIGINT#,
      goods_id = #record.goodsId:BIGINT#,
      brokerage = #record.brokerage:DECIMAL#,
      weight = #record.weight:INTEGER#,
      rebate_amount = #record.rebateAmount:DECIMAL#,
      audit_status = #record.auditStatus:INTEGER#,
      audit_dt = #record.auditDt:TIMESTAMP#,
      audit_remark = #record.auditRemark:VARCHAR#,
      remak = #record.remak:VARCHAR#,
      create_dt = #record.createDt:TIMESTAMP#,
      apply_user = #record.applyUser:VARCHAR#,
      apply_dt = #record.applyDt:TIMESTAMP#
    <isParameterPresent >
      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    update t_goods_brokerage
    <dynamic prepend="set" >
      <isNotNull prepend="," property="goodsId" >
        goods_id = #goodsId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="brokerage" >
        brokerage = #brokerage:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="weight" >
        weight = #weight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="rebateAmount" >
        rebate_amount = #rebateAmount:DECIMAL#
      </isNotNull>
      <isNotNull prepend="," property="auditStatus" >
        audit_status = #auditStatus:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="auditDt" >
        audit_dt = #auditDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="auditRemark" >
        audit_remark = #auditRemark:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="remak" >
        remak = #remak:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="createDt" >
        create_dt = #createDt:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="applyUser" >
        apply_user = #applyUser:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="applyDt" >
        apply_dt = #applyDt:TIMESTAMP#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.rc.portal.vo.TGoodsBrokerage" >
    update t_goods_brokerage
    set goods_id = #goodsId:BIGINT#,
      brokerage = #brokerage:DECIMAL#,
      weight = #weight:INTEGER#,
      rebate_amount = #rebateAmount:DECIMAL#,
      audit_status = #auditStatus:INTEGER#,
      audit_dt = #auditDt:TIMESTAMP#,
      audit_remark = #auditRemark:VARCHAR#,
      remak = #remak:VARCHAR#,
      create_dt = #createDt:TIMESTAMP#,
      apply_user = #applyUser:VARCHAR#,
      apply_dt = #applyDt:TIMESTAMP#
    where id = #id:BIGINT#
  </update>
  <select id="selectByExampleByPage" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.rc.portal.vo.TGoodsBrokerageExample" >
                    select id, goods_id, brokerage, weight, rebate_amount, audit_status, audit_dt, audit_remark,
                      remak, create_dt, apply_user, apply_dt
                    from t_goods_brokerage
                    <isParameterPresent >
                      <include refid="t_goods_brokerage.ibatorgenerated_Example_Where_Clause" />
                      <isNotNull property="orderByClause" >
                        order by $orderByClause$
                      </isNotNull>
                    </isParameterPresent>
					limit $pageInfo.start$ ,$pageInfo.pageSize$
  </select>


       <select id="selectListPage" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
                    select b.id, b.goods_id, b.brokerage,g.short_name,gp.price as pc_price,gp1.price as wap_price,gp2.price as app_price,g.goodsno
                    from t_goods_brokerage  b left join t_goods g on g.id = b.goods_id 
                    LEFT JOIN t_goods_price gp ON g.id = gp.goods_id and gp.platform_type='111yao' and gp.price_type='pc'
					LEFT JOIN t_goods_price gp1 ON g.id = gp1.goods_id and gp1.platform_type='111yao' and gp1.price_type='wap'
					LEFT JOIN t_goods_price gp2 ON g.id = gp2.goods_id and gp2.platform_type='111yao' and gp2.price_type='app'
                    where 1=1     
                    <isNotNull property="name" >
                      and g.short_name like #name#
                    </isNotNull>
                    <isNotNull property="goodsno" >
                      and g.goodsno like #goodsno#
                    </isNotNull>
                    limit $pageInfo.start$ ,$pageInfo.end$
  </select>
  
  <select id="selectListPageCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap" >
               select count(*)  from t_goods_brokerage  b left join t_goods g on g.id = b.goods_id 
                  where 1=1  
                <isNotNull property="name" >
                      and g.short_name like #name#
                </isNotNull>
  </select> 
  
  <select id="selectObjectPage" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
                    select b.id, b.goods_id, b.brokerage,g.short_name,g.goodsno,gp.price as pc_price,gp1.price as wap_price,gp2.price as app_price 
                    from t_goods_brokerage  b left join t_goods g on g.id = b.goods_id 
                    LEFT JOIN t_goods_price gp ON g.id = gp.goods_id and gp.platform_type='111yao' and gp.price_type='pc'
					LEFT JOIN t_goods_price gp1 ON g.id = gp1.goods_id and gp1.platform_type='111yao' and gp1.price_type='wap'
					LEFT JOIN t_goods_price gp2 ON g.id = gp2.goods_id and gp2.platform_type='111yao' and gp2.price_type='app'
                     where 1=1    
                    <isNotNull property="id" >
                      and b.id = #id#
                    </isNotNull>
  </select>
  <!-- 新版健康领秀商品列表  杨洁亮 -->
  <select id="selectGoodsBrokerageByPage" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
  select gb.id,gb.brokerage,gb.rebate_amount,gb.audit_status,gb.audit_remark,gb.create_dt,gb.apply_user,g.short_name,g.goodsno,gp.price as wap_price FROM t_goods_brokerage gb
LEFT JOIN t_goods g ON g.id=gb.goods_id
LEFT JOIN t_goods_price gp ON gp.goods_id=gb.goods_id AND gp.platform_type='111yao' and gp.price_type='wap'
WHERE 1=1
<isNotNull prepend="and" property="goodsName">
g.short_name like '%$goodsName$%'
</isNotNull>
<isNotNull prepend="and" property="goodsno">
g.goodsno like '%$goodsno$%'
</isNotNull>
<isNotNull prepend="and" property="status">
gb.audit_status = #status#
</isNotNull>
 <isNotNull property="start_date">
	<isNotNull property="end_date">
   	AND DATE_FORMAT(gb.create_dt ,'%Y-%m-%d') &gt;= DATE_FORMAT(#start_date#,'%Y-%m-%d') AND  DATE_FORMAT(gb.create_dt ,'%Y-%m-%d') &lt;= DATE_FORMAT(#end_date#,'%Y-%m-%d')
   	</isNotNull>
 </isNotNull>
GROUP BY gb.id DESC
  limit $pageInfo.start$ ,$pageInfo.end$
  </select>
  <!-- 新版健康领秀商品列表计数  杨洁亮 -->
  <select id="selectGoodsBrokerageByPageCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap" >
  select count(gb.id) FROM t_goods_brokerage gb
LEFT JOIN t_goods g ON g.id=gb.goods_id
LEFT JOIN t_goods_price gp ON gp.goods_id=gb.goods_id AND gp.platform_type='111yao' and gp.price_type='wap'
WHERE 1=1
<isNotNull prepend="and" property="goodsName">
g.short_name like '%$goodsName$%'
</isNotNull>
<isNotNull prepend="and" property="goodsno">
g.goodsno like '%$goodsno$%'
</isNotNull>
<isNotNull prepend="and" property="status">
gb.audit_status = #status#
</isNotNull>
 <isNotNull property="start_date">
	<isNotNull property="end_date">
   	AND DATE_FORMAT(gb.create_dt ,'%Y-%m-%d') &gt;= DATE_FORMAT(#start_date#,'%Y-%m-%d') AND  DATE_FORMAT(gb.create_dt ,'%Y-%m-%d') &lt;= DATE_FORMAT(#end_date#,'%Y-%m-%d')
   	</isNotNull>
 </isNotNull>
  </select>
  <!-- 新版查询单个商品 -->
    <select id="selectLeaderGoodsById" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
                    select b.id, b.goods_id, b.brokerage,g.short_name,g.goodsno,gp.price as wap_price,b.rebate_amount
                    from t_goods_brokerage  b left join t_goods g on g.id = b.goods_id 
					LEFT JOIN t_goods_price gp ON g.id = gp.goods_id and gp.platform_type='111yao' and gp.price_type='wap'
					where b.id = #id#
  </select>
  
  
   <!-- 新版健康领秀商品列表  杨洁亮 -->
  <select id="selectGoodsByCategoryId" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
  
  select t.id as goodsid from t_category_goods cg
  left join t_goods t on t.id=cg.goodsid
LEFT JOIN t_category c ON c.id=cg.categoryid
WHERE cg.type=1
<isNotNull prepend="and" property="categoryid">
(c.all_parent_id LIKE '%,$categoryid$,%' OR c.id=#categoryid#)
</isNotNull>
group by t.id desc
  </select> 
  
  
  
 <!-- 商品返佣审核列表  杨洁亮 -->
  <select id="selectGoodsBrokerageCheckListByPage" resultClass="java.util.HashMap" parameterClass="java.util.HashMap" >
  select gb.id,gb.brokerage,gb.rebate_amount,gb.audit_status,gb.audit_remark,gb.apply_dt,gb.apply_user,g.short_name,g.goodsno,gp.price as wap_price FROM t_goods_brokerage gb
LEFT JOIN t_goods g ON g.id=gb.goods_id
LEFT JOIN t_goods_price gp ON gp.goods_id=gb.goods_id AND gp.platform_type='111yao' and gp.price_type='wap'
WHERE gb.audit_status=1
<isNotNull prepend="and" property="goodsName">
g.short_name like '%$goodsName$%'
</isNotNull>
<isNotNull prepend="and" property="goodsno">
g.goodsno like '%$goodsno$%'
</isNotNull>
 <isNotNull property="startDate">
	<isNotNull property="endDate">
   	AND DATE_FORMAT(gb.apply_dt ,'%Y-%m-%d') &gt;= DATE_FORMAT(#startDate#,'%Y-%m-%d') AND  DATE_FORMAT(gb.apply_dt ,'%Y-%m-%d') &lt;= DATE_FORMAT(#endDate#,'%Y-%m-%d')
   	</isNotNull>
 </isNotNull>
order BY gb.apply_dt asc
  limit $pageInfo.start$ ,$pageInfo.end$
  </select>
  <!-- 商品返佣审核列表计数  杨洁亮 -->
  <select id="selectGoodsBrokerageCheckListCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap" >
  select count(gb.id) FROM t_goods_brokerage gb
LEFT JOIN t_goods g ON g.id=gb.goods_id
LEFT JOIN t_goods_price gp ON gp.goods_id=gb.goods_id AND gp.platform_type='111yao' and gp.price_type='wap'
WHERE gb.audit_status=1
<isNotNull prepend="and" property="goodsName">
g.short_name like '%$goodsName$%'
</isNotNull>
<isNotNull prepend="and" property="goodsno">
g.goodsno like '%$goodsno$%'
</isNotNull>
 <isNotNull property="startDate">
	<isNotNull property="endDate">
   	AND DATE_FORMAT(gb.apply_dt ,'%Y-%m-%d') &gt;= DATE_FORMAT(#startDate#,'%Y-%m-%d') AND  DATE_FORMAT(gb.apply_dt ,'%Y-%m-%d') &lt;= DATE_FORMAT(#endDate#,'%Y-%m-%d')
   	</isNotNull>
 </isNotNull>
  </select> 
  
</sqlMap>
